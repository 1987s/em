numbers: int = 4815

#      0..7                             numbers —  identifier
#      7..8                                   : —  colon
#     9..12                                 int —  builtin_type
#    13..14                                   = —  assignment_operator
#    15..19                                4815 —  integer
#  172..173                                  \n —  delimeter
#  172..173                                  \n —  delimeter
#  172..173                                  \n —  delimeter
#  172..173                                  \n —  delimeter
#  172..173                                  \n —  delimeter
#  172..173                                  \n —  delimeter
#2361..2361                                     —  eof


#self: obj HatchTest

#if true
#  numbers := 4815
#end

#

#day: str = 'Friday'
#if numbers == 4815
#  numbers += 162342
#end
#
#numbers = numbers + 1

##car := 'WRX'
##weather: str?
##weather ||= 'Sunny'
##yes: str! = "No"
##holidays: Date = .christmas
##alarm: Time?
##appointment: DateTime?
#
## New unique control flow structures
#for array_example
#  it
#  at
#  stop
#  next
#end
#
#while sleeping?
#  next
#  stop
#end
#
#if sleeping? || working?
#end
#
#when pet_type
#  is .dog
#  end
#  is .cat
#  is .bird
#  is .snake(4)
#else
#  @log 'test yo'
#  @warn 'Unknown pet type'
#  @error 'oops'
#end
#
## New unique method
#def feed_pet
#  feed if hungry?
#  food_quantity := if hungry?
#    3.0
#  else
#    1.0
#  end
#end
#
## New unique built-in functions
#squared_values := [4, 5, 6].map
#  it * it
#end
#
#filtered := collection.where
#  it == 4
#end
#
## New unique debug printing to console
#@log food_quantity
#@log food_quantity + 2, "Food quantity is `food_quantity`"
#@warn 'Low on food'
#@error 'Out of food'
#
## New unique reading from console
#name: str
#name = <~
#
## New unique interfaces (APIs)
#api Building
#  height: float
#  previous: Building
#  private rooms: int
#
#  def floors: int
#  end
#  def calc_capacity: int(float)
#  end
#  def description: str
#    "This building has `rooms` rooms!"
#  end
#  private def lock_doors
#  end
#end
#
## New unique implementing an API
#obj Skyscraper
#  + Building
#
#  def floors: int
#  end
#
#  private def lock_doors
#    previous.calc_capacity(100.5)
#  end
#end
#
## New unique custom errors
#api Timeout
#  def notify: str
#end
#
#obj ServerTimeout + Timeout
#  def notify: str => 'The server timed out.'
#end
#
## New unique composition
#obj Vehicle
#  + Engine
#  + Wheels
#  + Hatch/Doors
#end
#
## New unique override namespace
#obj NewNamespace/Forest
#end
#
#obj //Ocean
#end
#
#api Volume
#  volume := float3(2, 2, 2)
#end
#
#api Velocity
#  velocity := float3(1, 1, 1)
#
#  def accelerate: Velocity(target: Vehicle)
#  end
#end
#
#api Location
#  location := float3(3, 3, 3)
#end
#
#api Movable
#  + Vehicle
#end
#
## New unique scratch object
#_.tmp_var: int = 123
#@log _.tmp_var
#
#_ := garbage_val
#
#array_example := [1, 2, 3]
#dict_example := { 'key': 'value' }
#dict_example2 := { key: 'value' }
#dict_example3: {str,str} = { 'key': 'value' }
